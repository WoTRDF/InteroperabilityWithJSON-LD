<?xml version="1.0"?>


<!DOCTYPE rdf:RDF [
    <!ENTITY owl "http://www.w3.org/2002/07/owl#" >
    <!ENTITY xsd "http://www.w3.org/2001/XMLSchema#" >
    <!ENTITY rdfs "http://www.w3.org/2000/01/rdf-schema#" >
    <!ENTITY rdf "http://www.w3.org/1999/02/22-rdf-syntax-ns#" >
]>


<rdf:RDF xmlns="http://www.w3.org/2002/07/owl#"
     xml:base="http://www.w3.org/2002/07/owl"
     xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
     xmlns:owl="http://www.w3.org/2002/07/owl#"
     xmlns:xsd="http://www.w3.org/2001/XMLSchema#"
     xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#">
    <Ontology rdf:about="http://lab.wot-rdf.org/CrossDomain#">
        <versionIRI rdf:resource="http://lab.wot-rdf.org/CrossDomain"/>
    </Ontology>
    


    <!-- 
    ///////////////////////////////////////////////////////////////////////////////////////
    //
    // Object Properties
    //
    ///////////////////////////////////////////////////////////////////////////////////////
     -->

    


    <!-- http://lab.wot-rdf.org/CrossDomain#contains -->

    <ObjectProperty rdf:about="http://lab.wot-rdf.org/CrossDomain#contains">
        <rdfs:comment>[CD]</rdfs:comment>
        <inverseOf rdf:resource="http://lab.wot-rdf.org/CrossDomain#isIn"/>
        <rdfs:subPropertyOf rdf:resource="http://www.onem2m.org/ontology/Base_Ontology#hasThingRelation"/>
    </ObjectProperty>
    


    <!-- http://lab.wot-rdf.org/CrossDomain#hasId -->

    <ObjectProperty rdf:about="http://lab.wot-rdf.org/CrossDomain#hasId">
        <rdfs:subPropertyOf rdf:resource="http://www.onem2m.org/ontology/Base_Ontology#hasThingProperty"/>
    </ObjectProperty>
    


    <!-- http://lab.wot-rdf.org/CrossDomain#hasName -->

    <ObjectProperty rdf:about="http://lab.wot-rdf.org/CrossDomain#hasName">
        <rdfs:comment>[CD]</rdfs:comment>
        <rdfs:subPropertyOf rdf:resource="http://www.onem2m.org/ontology/Base_Ontology#hasThingProperty"/>
    </ObjectProperty>
    


    <!-- http://lab.wot-rdf.org/CrossDomain#hasUnit -->

    <ObjectProperty rdf:about="http://lab.wot-rdf.org/CrossDomain#hasUnit">
        <rdfs:subPropertyOf rdf:resource="http://www.onem2m.org/ontology/Base_Ontology#hasThingProperty"/>
    </ObjectProperty>
    


    <!-- http://lab.wot-rdf.org/CrossDomain#hasValue -->

    <ObjectProperty rdf:about="http://lab.wot-rdf.org/CrossDomain#hasValue">
        <rdfs:comment>[CD]</rdfs:comment>
        <rdfs:subPropertyOf rdf:resource="http://www.onem2m.org/ontology/Base_Ontology#hasThingProperty"/>
    </ObjectProperty>
    


    <!-- http://lab.wot-rdf.org/CrossDomain#isIn -->

    <ObjectProperty rdf:about="http://lab.wot-rdf.org/CrossDomain#isIn">
        <rdfs:comment>[CD]</rdfs:comment>
        <rdfs:subPropertyOf rdf:resource="http://www.onem2m.org/ontology/Base_Ontology#hasThingRelation"/>
    </ObjectProperty>
    


    <!-- http://lab.wot-rdf.org/CrossDomain#nextTo -->

    <ObjectProperty rdf:about="http://lab.wot-rdf.org/CrossDomain#nextTo">
        <rdfs:comment>[CD]</rdfs:comment>
        <rdfs:subPropertyOf rdf:resource="http://www.onem2m.org/ontology/Base_Ontology#hasThingRelation"/>
    </ObjectProperty>
    


    <!-- http://www.onem2m.org/ontology/Base_Ontology#canHaveMetaData -->

    <ObjectProperty rdf:about="http://www.onem2m.org/ontology/Base_Ontology#canHaveMetaData">
        <rdfs:comment>An Aspect of a Thing-Value or Input/Output of an Operation can have MetaData (like units, precision-ranges …).</rdfs:comment>
        <rdfs:domain rdf:resource="http://www.onem2m.org/ontology/Base_Ontology#Aspect"/>
        <rdfs:range rdf:resource="http://www.onem2m.org/ontology/Base_Ontology#MetaData"/>
    </ObjectProperty>
    


    <!-- http://www.onem2m.org/ontology/Base_Ontology#concerns -->

    <ObjectProperty rdf:about="http://www.onem2m.org/ontology/Base_Ontology#concerns">
        <rdfs:comment>A Value of a Thing can concern a certain Aspect (a quality or kind).
e.g. an indoor temperature concerns the Aspect “Temperature” that could be measured by a temperature sensor</rdfs:comment>
        <rdfs:range rdf:resource="http://www.onem2m.org/ontology/Base_Ontology#Aspect"/>
        <rdfs:domain rdf:resource="http://www.onem2m.org/ontology/Base_Ontology#Value"/>
    </ObjectProperty>
    


    <!-- http://www.onem2m.org/ontology/Base_Ontology#consistsOf -->

    <ObjectProperty rdf:about="http://www.onem2m.org/ontology/Base_Ontology#consistsOf">
        <rdfs:comment>A Device can consist of (i.e. be composed) of several (sub-) Devices</rdfs:comment>
    </ObjectProperty>
    


    <!-- http://www.onem2m.org/ontology/Base_Ontology#describe -->

    <ObjectProperty rdf:about="http://www.onem2m.org/ontology/Base_Ontology#describe">
        <rdfs:comment>An Input- or Output variable of an Opertation describe an Aspect (a quality or kind)</rdfs:comment>
        <rdfs:range rdf:resource="http://www.onem2m.org/ontology/Base_Ontology#Aspect"/>
        <rdfs:domain>
            <Class>
                <unionOf rdf:parseType="Collection">
                    <rdf:Description rdf:about="http://www.onem2m.org/ontology/Base_Ontology#Input"/>
                    <rdf:Description rdf:about="http://www.onem2m.org/ontology/Base_Ontology#Output"/>
                </unionOf>
            </Class>
        </rdfs:domain>
    </ObjectProperty>
    


    <!-- http://www.onem2m.org/ontology/Base_Ontology#exposesCommand -->

    <ObjectProperty rdf:about="http://www.onem2m.org/ontology/Base_Ontology#exposesCommand">
        <rdfs:comment>A –machine interpretable- Operation exposes a –human understandable- Command to a network</rdfs:comment>
        <rdfs:range rdf:resource="http://www.onem2m.org/ontology/Base_Ontology#Command"/>
        <rdfs:domain rdf:resource="http://www.onem2m.org/ontology/Base_Ontology#Operation"/>
    </ObjectProperty>
    


    <!-- http://www.onem2m.org/ontology/Base_Ontology#exposesFunctionality -->

    <ObjectProperty rdf:about="http://www.onem2m.org/ontology/Base_Ontology#exposesFunctionality">
        <rdfs:comment>A Service exposes a Functionality to the network and makes it discoverable, registerable and remotely controllable in the network</rdfs:comment>
        <rdfs:range rdf:resource="http://www.onem2m.org/ontology/Base_Ontology#Functionality"/>
        <rdfs:domain rdf:resource="http://www.onem2m.org/ontology/Base_Ontology#Service"/>
    </ObjectProperty>
    


    <!-- http://www.onem2m.org/ontology/Base_Ontology#hasActuator -->

    <ObjectProperty rdf:about="http://www.onem2m.org/ontology/Base_Ontology#hasActuator">
        <rdfs:comment>[CD]</rdfs:comment>
        <rdfs:range rdf:resource="http://lab.wot-rdf.org/CrossDomain#Actuator"/>
        <rdfs:subPropertyOf rdf:resource="http://www.onem2m.org/ontology/Base_Ontology#hasDevice"/>
    </ObjectProperty>
    


    <!-- http://www.onem2m.org/ontology/Base_Ontology#hasCommand -->

    <ObjectProperty rdf:about="http://www.onem2m.org/ontology/Base_Ontology#hasCommand">
        <rdfs:comment>A Functionality of a Device can be influenced / observed by a human user through the Commands that this Functionality has and that are offered to the user</rdfs:comment>
        <rdfs:range rdf:resource="http://www.onem2m.org/ontology/Base_Ontology#Command"/>
        <rdfs:domain rdf:resource="http://www.onem2m.org/ontology/Base_Ontology#Functionality"/>
    </ObjectProperty>
    


    <!-- http://www.onem2m.org/ontology/Base_Ontology#hasDevice -->

    <ObjectProperty rdf:about="http://www.onem2m.org/ontology/Base_Ontology#hasDevice">
        <rdfs:comment>[CD]</rdfs:comment>
        <rdfs:subPropertyOf rdf:resource="http://www.onem2m.org/ontology/Base_Ontology#hasThingRelation"/>
    </ObjectProperty>
    


    <!-- http://www.onem2m.org/ontology/Base_Ontology#hasEntityRelation -->

    <ObjectProperty rdf:about="http://www.onem2m.org/ontology/Base_Ontology#hasEntityRelation">
        <rdfs:comment>[CD]</rdfs:comment>
        <rdfs:range rdf:resource="http://lab.wot-rdf.org/CrossDomain#ContextEntity"/>
    </ObjectProperty>
    


    <!-- http://www.onem2m.org/ontology/Base_Ontology#hasFunctionality -->

    <ObjectProperty rdf:about="http://www.onem2m.org/ontology/Base_Ontology#hasFunctionality">
        <rdfs:comment>In order to accomplish its task, a Device performs one or more Functionalities</rdfs:comment>
    </ObjectProperty>
    


    <!-- http://www.onem2m.org/ontology/Base_Ontology#hasInput -->

    <ObjectProperty rdf:about="http://www.onem2m.org/ontology/Base_Ontology#hasInput">
        <rdfs:comment>An Operation of a Service of the Device or a Command of a Functionality of the Device can have Input data.</rdfs:comment>
        <rdfs:range rdf:resource="http://www.onem2m.org/ontology/Base_Ontology#Input"/>
        <rdfs:domain>
            <Class>
                <unionOf rdf:parseType="Collection">
                    <rdf:Description rdf:about="http://www.onem2m.org/ontology/Base_Ontology#Command"/>
                    <rdf:Description rdf:about="http://www.onem2m.org/ontology/Base_Ontology#Operation"/>
                </unionOf>
            </Class>
        </rdfs:domain>
    </ObjectProperty>
    


    <!-- http://www.onem2m.org/ontology/Base_Ontology#hasInputTarget -->

    <ObjectProperty rdf:about="http://www.onem2m.org/ontology/Base_Ontology#hasInputTarget">
        <rdfs:comment>The Input of an Operation has a Target  that describes a destination (e.g. a URL) where the Input values are to be stored</rdfs:comment>
        <rdfs:domain rdf:resource="http://www.onem2m.org/ontology/Base_Ontology#Input"/>
        <rdfs:range rdf:resource="http://www.onem2m.org/ontology/Base_Ontology#Target"/>
    </ObjectProperty>
    


    <!-- http://www.onem2m.org/ontology/Base_Ontology#hasLocation -->

    <ObjectProperty rdf:about="http://www.onem2m.org/ontology/Base_Ontology#hasLocation">
        <rdfs:comment>[CD]</rdfs:comment>
        <rdfs:subPropertyOf rdf:resource="http://www.onem2m.org/ontology/Base_Ontology#hasThingProperty"/>
        <rdfs:range rdf:resource="https://www.w3.org/2003/01/geo/wgs84_pos#Point"/>
    </ObjectProperty>
    


    <!-- http://www.onem2m.org/ontology/Base_Ontology#hasMetaData -->

    <ObjectProperty rdf:about="http://www.onem2m.org/ontology/Base_Ontology#hasMetaData">
        <rdfs:isDefinedBy>A Value of a Thing can have MetaData (like units, precision-ranges …).</rdfs:isDefinedBy>
        <rdfs:range rdf:resource="http://www.onem2m.org/ontology/Base_Ontology#MetaData"/>
        <rdfs:domain rdf:resource="http://www.onem2m.org/ontology/Base_Ontology#Value"/>
    </ObjectProperty>
    


    <!-- http://www.onem2m.org/ontology/Base_Ontology#hasMethod -->

    <ObjectProperty rdf:about="http://www.onem2m.org/ontology/Base_Ontology#hasMethod">
        <rdfs:isDefinedBy>Each Operation needs to have a Method that describes the way (e.g. RESTful or RPC based, subscribed, event based, polled, pushed..) how data input/output is offered by that Operation of the Device and/or InterworkedDevice</rdfs:isDefinedBy>
        <rdfs:range rdf:resource="http://www.onem2m.org/ontology/Base_Ontology#Method"/>
        <rdfs:domain rdf:resource="http://www.onem2m.org/ontology/Base_Ontology#Operation"/>
    </ObjectProperty>
    


    <!-- http://www.onem2m.org/ontology/Base_Ontology#hasOperation -->

    <ObjectProperty rdf:about="http://www.onem2m.org/ontology/Base_Ontology#hasOperation">
        <rdfs:isDefinedBy>A Service communicates by means of Operations over the network to transmit data to/from other devices</rdfs:isDefinedBy>
    </ObjectProperty>
    


    <!-- http://www.onem2m.org/ontology/Base_Ontology#hasOperationState -->

    <ObjectProperty rdf:about="http://www.onem2m.org/ontology/Base_Ontology#hasOperationState">
        <rdfs:isDefinedBy>An Operation may have an OperationState that is exposed</rdfs:isDefinedBy>
        <rdfs:domain rdf:resource="http://www.onem2m.org/ontology/Base_Ontology#Operation"/>
        <rdfs:range rdf:resource="http://www.onem2m.org/ontology/Base_Ontology#OperationState"/>
    </ObjectProperty>
    


    <!-- http://www.onem2m.org/ontology/Base_Ontology#hasOperationStateTarget -->

    <ObjectProperty rdf:about="http://www.onem2m.org/ontology/Base_Ontology#hasOperationStateTarget">
        <rdfs:isDefinedBy>The OperationState of an Operation has a Target  that describes a destination (e.g. a URL) where the OperationState values are to be stored</rdfs:isDefinedBy>
        <rdfs:domain rdf:resource="http://www.onem2m.org/ontology/Base_Ontology#OperationState"/>
        <rdfs:range rdf:resource="http://www.onem2m.org/ontology/Base_Ontology#Target"/>
    </ObjectProperty>
    


    <!-- http://www.onem2m.org/ontology/Base_Ontology#hasOutput -->

    <ObjectProperty rdf:about="http://www.onem2m.org/ontology/Base_Ontology#hasOutput">
        <rdfs:isDefinedBy>An Operation of a Service of the Device or a Command of a Functionality of the Device can have Output data.</rdfs:isDefinedBy>
        <rdfs:range rdf:resource="http://www.onem2m.org/ontology/Base_Ontology#Output"/>
        <rdfs:domain>
            <Class>
                <unionOf rdf:parseType="Collection">
                    <rdf:Description rdf:about="http://www.onem2m.org/ontology/Base_Ontology#Command"/>
                    <rdf:Description rdf:about="http://www.onem2m.org/ontology/Base_Ontology#Operation"/>
                </unionOf>
            </Class>
        </rdfs:domain>
    </ObjectProperty>
    


    <!-- http://www.onem2m.org/ontology/Base_Ontology#hasOutputTarget -->

    <ObjectProperty rdf:about="http://www.onem2m.org/ontology/Base_Ontology#hasOutputTarget">
        <rdfs:isDefinedBy>The Output of an Operation has a Target  that describes a destination (e.g. a URL) where the Output values are to be stored</rdfs:isDefinedBy>
        <rdfs:domain rdf:resource="http://www.onem2m.org/ontology/Base_Ontology#Output"/>
        <rdfs:range rdf:resource="http://www.onem2m.org/ontology/Base_Ontology#Target"/>
    </ObjectProperty>
    


    <!-- http://www.onem2m.org/ontology/Base_Ontology#hasSensor -->

    <ObjectProperty rdf:about="http://www.onem2m.org/ontology/Base_Ontology#hasSensor">
        <rdfs:comment>[CD]</rdfs:comment>
        <rdfs:range rdf:resource="http://lab.wot-rdf.org/CrossDomain#Sensor"/>
        <rdfs:subPropertyOf rdf:resource="http://www.onem2m.org/ontology/Base_Ontology#hasDevice"/>
    </ObjectProperty>
    


    <!-- http://www.onem2m.org/ontology/Base_Ontology#hasService -->

    <ObjectProperty rdf:about="http://www.onem2m.org/ontology/Base_Ontology#hasService">
        <rdfs:isDefinedBy>The Functionalities of a Device are exposed in the network as Services of the Device</rdfs:isDefinedBy>
    </ObjectProperty>
    


    <!-- http://www.onem2m.org/ontology/Base_Ontology#hasSubService -->

    <ObjectProperty rdf:about="http://www.onem2m.org/ontology/Base_Ontology#hasSubService">
        <rdfs:isDefinedBy>A Service may be composed of smaller, independent (sub)Services, e.g. re-usable servicemodules</rdfs:isDefinedBy>
        <rdfs:domain rdf:resource="http://www.onem2m.org/ontology/Base_Ontology#Service"/>
        <rdfs:range rdf:resource="http://www.onem2m.org/ontology/Base_Ontology#Service"/>
    </ObjectProperty>
    


    <!-- http://www.onem2m.org/ontology/Base_Ontology#hasTarget -->

    <ObjectProperty rdf:about="http://www.onem2m.org/ontology/Base_Ontology#hasTarget">
        <rdfs:isDefinedBy>The Operation has a Target  that describes a destination (e.g. a URL) where the data of the Operation are to be stored</rdfs:isDefinedBy>
        <rdfs:domain rdf:resource="http://www.onem2m.org/ontology/Base_Ontology#Operation"/>
        <rdfs:range rdf:resource="http://www.onem2m.org/ontology/Base_Ontology#Target"/>
    </ObjectProperty>
    


    <!-- http://www.onem2m.org/ontology/Base_Ontology#hasThingProperty -->

    <ObjectProperty rdf:about="http://www.onem2m.org/ontology/Base_Ontology#hasThingProperty">
        <rdfs:isDefinedBy>A Thing may have properties that can be described by Values</rdfs:isDefinedBy>
        <rdfs:domain rdf:resource="http://www.onem2m.org/ontology/Base_Ontology#Thing"/>
        <rdfs:range rdf:resource="http://www.onem2m.org/ontology/Base_Ontology#Value"/>
    </ObjectProperty>
    


    <!-- http://www.onem2m.org/ontology/Base_Ontology#hasThingRelation -->

    <ObjectProperty rdf:about="http://www.onem2m.org/ontology/Base_Ontology#hasThingRelation">
        <rdfs:isDefinedBy>A Thing may have relations to itself or to other Things (e-g. a Thing &quot;Room&quot; could have a relation &quot;has_Door&quot; with a Thing &quot;Door&quot;)</rdfs:isDefinedBy>
        <rdfs:subPropertyOf rdf:resource="http://www.onem2m.org/ontology/Base_Ontology#hasEntityRelation"/>
    </ObjectProperty>
    


    <!-- http://www.onem2m.org/ontology/Base_Ontology#hasTime -->

    <ObjectProperty rdf:about="http://www.onem2m.org/ontology/Base_Ontology#hasTime">
        <rdfs:comment>[CD]</rdfs:comment>
        <rdfs:subPropertyOf rdf:resource="http://www.onem2m.org/ontology/Base_Ontology#hasThingProperty"/>
        <rdfs:range rdf:resource="https://www.w3.org/2006/Time"/>
    </ObjectProperty>
    


    <!-- http://www.onem2m.org/ontology/Base_Ontology#isControlledBy -->

    <ObjectProperty rdf:about="http://www.onem2m.org/ontology/Base_Ontology#isControlledBy">
        <rdfs:isDefinedBy>An AreaNetwork can be controlled by an Interworked Device though the IPE.</rdfs:isDefinedBy>
        <rdfs:domain rdf:resource="http://www.onem2m.org/ontology/Base_Ontology#AreaNetwork"/>
    </ObjectProperty>
    


    <!-- http://www.onem2m.org/ontology/Base_Ontology#isExposedByOperation -->

    <ObjectProperty rdf:about="http://www.onem2m.org/ontology/Base_Ontology#isExposedByOperation">
        <rdfs:isDefinedBy>A –human understandable- Command is exposed by an Operation to the network</rdfs:isDefinedBy>
        <rdfs:domain rdf:resource="http://www.onem2m.org/ontology/Base_Ontology#Command"/>
        <rdfs:range rdf:resource="http://www.onem2m.org/ontology/Base_Ontology#Operation"/>
        <inverseOf rdf:resource="http://www.onem2m.org/ontology/Base_Ontology#exposesCommand"/>
    </ObjectProperty>
    


    <!-- http://www.onem2m.org/ontology/Base_Ontology#isExposedByService -->

    <ObjectProperty rdf:about="http://www.onem2m.org/ontology/Base_Ontology#isExposedByService">
        <rdfs:isDefinedBy>A –human understandable- Functionality of a Device is exposed by a Service to the network</rdfs:isDefinedBy>
        <rdfs:domain rdf:resource="http://www.onem2m.org/ontology/Base_Ontology#Functionality"/>
        <rdfs:range rdf:resource="http://www.onem2m.org/ontology/Base_Ontology#Service"/>
        <inverseOf rdf:resource="http://www.onem2m.org/ontology/Base_Ontology#exposesFunctionality"/>
    </ObjectProperty>
    


    <!-- http://www.onem2m.org/ontology/Base_Ontology#isPartOf -->

    <ObjectProperty rdf:about="http://www.onem2m.org/ontology/Base_Ontology#isPartOf">
        <rdfs:isDefinedBy>An InterworkedDevice constitutes a part of an AreaNetwork</rdfs:isDefinedBy>
        <rdfs:range rdf:resource="http://www.onem2m.org/ontology/Base_Ontology#AreaNetwork"/>
    </ObjectProperty>
    


    <!-- http://www.onem2m.org/ontology/Base_Ontology#refersTo -->

    <ObjectProperty rdf:about="http://www.onem2m.org/ontology/Base_Ontology#refersTo">
        <rdfs:isDefinedBy>A Functionality of a Device can refer to a certain Aspect (a quality or kind) that is measured or controlled by that Functionality. 
e.g. a temperature sensor would refer to the Aspect “Temperature” that it measures</rdfs:isDefinedBy>
        <rdfs:range rdf:resource="http://www.onem2m.org/ontology/Base_Ontology#Aspect"/>
        <rdfs:domain rdf:resource="http://www.onem2m.org/ontology/Base_Ontology#Functionality"/>
    </ObjectProperty>
    


    <!-- 
    ///////////////////////////////////////////////////////////////////////////////////////
    //
    // Data properties
    //
    ///////////////////////////////////////////////////////////////////////////////////////
     -->

    


    <!-- http://www.onem2m.org/ontology/Base_Ontology#hasDataTypeAndRange -->

    <DatatypeProperty rdf:about="http://www.onem2m.org/ontology/Base_Ontology#hasDataTypeAndRange">
        <rdfs:comment>This Data Property specifies the data type and –range for Input, Output, Value and OperationState</rdfs:comment>
        <rdfs:domain>
            <Class>
                <unionOf rdf:parseType="Collection">
                    <rdf:Description rdf:about="http://www.onem2m.org/ontology/Base_Ontology#Input"/>
                    <rdf:Description rdf:about="http://www.onem2m.org/ontology/Base_Ontology#OperationState"/>
                    <rdf:Description rdf:about="http://www.onem2m.org/ontology/Base_Ontology#Output"/>
                    <rdf:Description rdf:about="http://www.onem2m.org/ontology/Base_Ontology#Value"/>
                </unionOf>
            </Class>
        </rdfs:domain>
    </DatatypeProperty>
    


    <!-- http://www.onem2m.org/ontology/Base_Ontology#netTechnologyCommunicationProtocol -->

    <DatatypeProperty rdf:about="http://www.onem2m.org/ontology/Base_Ontology#netTechnologyCommunicationProtocol">
        <rdfs:comment>Identification of a communication protocol (e.g. ZigBee_1_0)</rdfs:comment>
        <rdfs:domain rdf:resource="http://www.onem2m.org/ontology/Base_Ontology#AreaNetwork"/>
        <rdfs:range rdf:resource="&rdf;PlainLiteral"/>
    </DatatypeProperty>
    


    <!-- http://www.onem2m.org/ontology/Base_Ontology#netTechnologyPhysicalStandard -->

    <DatatypeProperty rdf:about="http://www.onem2m.org/ontology/Base_Ontology#netTechnologyPhysicalStandard">
        <rdfs:comment>Identification of the physical properties of a Area Network technology (e.g. IEEE_802_15_4_2003_2_4GHz).</rdfs:comment>
        <rdfs:domain rdf:resource="http://www.onem2m.org/ontology/Base_Ontology#AreaNetwork"/>
        <rdfs:range rdf:resource="&rdf;PlainLiteral"/>
    </DatatypeProperty>
    


    <!-- http://www.onem2m.org/ontology/Base_Ontology#netTechnologyProfile -->

    <DatatypeProperty rdf:about="http://www.onem2m.org/ontology/Base_Ontology#netTechnologyProfile">
        <rdfs:comment>Identification of a profile (e.g. ZigBee_HA) of a Area Network technology.</rdfs:comment>
        <rdfs:domain rdf:resource="http://www.onem2m.org/ontology/Base_Ontology#AreaNetwork"/>
        <rdfs:range rdf:resource="&rdf;PlainLiteral"/>
    </DatatypeProperty>
    


    <!-- 
    ///////////////////////////////////////////////////////////////////////////////////////
    //
    // Classes
    //
    ///////////////////////////////////////////////////////////////////////////////////////
     -->

    


    <!-- http://lab.wot-rdf.org/CrossDomain#Actuator -->

    <Class rdf:about="http://lab.wot-rdf.org/CrossDomain#Actuator">
        <equivalentClass>
            <Restriction>
                <onProperty rdf:resource="http://www.onem2m.org/ontology/Base_Ontology#hasFunctionality"/>
                <onClass rdf:resource="http://www.onem2m.org/ontology/Base_Ontology#ControllingFunctionality"/>
                <minQualifiedCardinality rdf:datatype="&xsd;nonNegativeInteger">1</minQualifiedCardinality>
            </Restriction>
        </equivalentClass>
        <rdfs:subClassOf rdf:resource="http://www.onem2m.org/ontology/Base_Ontology#Device"/>
        <rdfs:comment>[CD]</rdfs:comment>
    </Class>
    


    <!-- http://lab.wot-rdf.org/CrossDomain#ContextEntity -->

    <Class rdf:about="http://lab.wot-rdf.org/CrossDomain#ContextEntity">
        <rdfs:comment>[CD] A ContextEntity in is a general entity.</rdfs:comment>
    </Class>
    


    <!-- http://lab.wot-rdf.org/CrossDomain#ContinousValue -->

    <Class rdf:about="http://lab.wot-rdf.org/CrossDomain#ContinousValue">
        <rdfs:subClassOf rdf:resource="http://www.onem2m.org/ontology/Base_Ontology#Value"/>
        <rdfs:comment>[CD]</rdfs:comment>
    </Class>
    


    <!-- http://lab.wot-rdf.org/CrossDomain#DiscreteValue -->

    <Class rdf:about="http://lab.wot-rdf.org/CrossDomain#DiscreteValue">
        <rdfs:subClassOf rdf:resource="http://www.onem2m.org/ontology/Base_Ontology#Value"/>
        <rdfs:comment>[CD]</rdfs:comment>
    </Class>
    


    <!-- http://lab.wot-rdf.org/CrossDomain#Id -->

    <Class rdf:about="http://lab.wot-rdf.org/CrossDomain#Id">
        <rdfs:subClassOf rdf:resource="http://www.onem2m.org/ontology/Base_Ontology#Aspect"/>
    </Class>
    


    <!-- http://lab.wot-rdf.org/CrossDomain#Sensor -->

    <Class rdf:about="http://lab.wot-rdf.org/CrossDomain#Sensor">
        <equivalentClass>
            <Restriction>
                <onProperty rdf:resource="http://www.onem2m.org/ontology/Base_Ontology#hasFunctionality"/>
                <onClass rdf:resource="http://www.onem2m.org/ontology/Base_Ontology#MeasuringFunctionality"/>
                <minQualifiedCardinality rdf:datatype="&xsd;nonNegativeInteger">1</minQualifiedCardinality>
            </Restriction>
        </equivalentClass>
        <equivalentClass>
            <Restriction>
                <onProperty rdf:resource="http://www.onem2m.org/ontology/Base_Ontology#hasFunctionality"/>
                <onClass rdf:resource="http://www.onem2m.org/ontology/Base_Ontology#ControllingFunctionality"/>
                <qualifiedCardinality rdf:datatype="&xsd;nonNegativeInteger">0</qualifiedCardinality>
            </Restriction>
        </equivalentClass>
        <rdfs:subClassOf rdf:resource="http://www.onem2m.org/ontology/Base_Ontology#Device"/>
        <rdfs:comment>[CD]</rdfs:comment>
    </Class>
    


    <!-- http://lab.wot-rdf.org/CrossDomain#State -->

    <Class rdf:about="http://lab.wot-rdf.org/CrossDomain#State">
        <rdfs:subClassOf rdf:resource="http://www.onem2m.org/ontology/Base_Ontology#Aspect"/>
        <rdfs:comment>[CD]</rdfs:comment>
    </Class>
    


    <!-- http://lab.wot-rdf.org/CrossDomain#Unit -->

    <Class rdf:about="http://lab.wot-rdf.org/CrossDomain#Unit">
        <rdfs:subClassOf rdf:resource="http://www.onem2m.org/ontology/Base_Ontology#Aspect"/>
    </Class>
    


    <!-- http://www.onem2m.org/ontology/Base_Ontology#AreaNetwork -->

    <Class rdf:about="http://www.onem2m.org/ontology/Base_Ontology#AreaNetwork">
        <rdfs:comment>An AreaNetwork (Class: AreaNetwork) is a Network that provides data transport services between an Interworked Device and the oneM2M System. Different area Networks can use heterogeneous network technologies that may or may not support IP access</rdfs:comment>
    </Class>
    


    <!-- http://www.onem2m.org/ontology/Base_Ontology#Aspect -->

    <Class rdf:about="http://www.onem2m.org/ontology/Base_Ontology#Aspect">
        <rdfs:comment>An Aspect (Class: Aspect) describes the real-world aspect that a functionality or a property of a thing relates to. Aspect is also used to describe a the quality or kind of an Input- or Output variable of an Opertation refers to. 
The Aspect could be a (physical or non-physical) entity or it could be a quality.</rdfs:comment>
    </Class>
    


    <!-- http://www.onem2m.org/ontology/Base_Ontology#CRUDNMethod -->

    <Class rdf:about="http://www.onem2m.org/ontology/Base_Ontology#CRUDNMethod">
        <rdfs:subClassOf rdf:resource="http://www.onem2m.org/ontology/Base_Ontology#Method"/>
        <rdfs:comment>CRUDNMethod (Class: CRUDNMethod) is the method how data input/output is offered by the AE (or proxied device) in the oneM2M Sytem (.e. one of CREATE, RETRIEVE, UPDATE, DELETE, NOTIFY)</rdfs:comment>
    </Class>
    


    <!-- http://www.onem2m.org/ontology/Base_Ontology#Command -->

    <Class rdf:about="http://www.onem2m.org/ontology/Base_Ontology#Command">
        <rdfs:subClassOf>
            <Restriction>
                <onProperty rdf:resource="http://www.onem2m.org/ontology/Base_Ontology#hasInput"/>
                <allValuesFrom rdf:resource="http://www.onem2m.org/ontology/Base_Ontology#Input"/>
            </Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <Restriction>
                <onProperty rdf:resource="http://www.onem2m.org/ontology/Base_Ontology#hasOutput"/>
                <allValuesFrom rdf:resource="http://www.onem2m.org/ontology/Base_Ontology#Output"/>
            </Restriction>
        </rdfs:subClassOf>
        <rdfs:comment>A Command (Class: Command) represents an action that can be performed to support the Functionality. A Command is the –human understandable- action that is invoked in a device or is reported by the device. A Command is exposed by an Operation to the network. Input and Output of the related Operation can parameterize the command.
e.g. the Functionality “dimming-functionality” of a light switch that remotely controls a light could have a Command “setLightIntensity”, with a parameter that has values 0 – 100 %.</rdfs:comment>
    </Class>
    


    <!-- http://www.onem2m.org/ontology/Base_Ontology#ControllingFunctionality -->

    <Class rdf:about="http://www.onem2m.org/ontology/Base_Ontology#ControllingFunctionality">
        <rdfs:subClassOf rdf:resource="http://www.onem2m.org/ontology/Base_Ontology#Functionality"/>
        <rdfs:comment>A ControllingFunctionality (Class: ControllingFunctionality) represents a functionality that has impacts on the real world, but does not gather data. In general a ControllingFunctionality has Commands (and/or Operations of its related Services) that receives Input data
E.g. a thermostat would have “temperature-adjustment” as a ControllingFunctionality</rdfs:comment>
    </Class>
    


    <!-- http://www.onem2m.org/ontology/Base_Ontology#Device -->

    <Class rdf:about="http://www.onem2m.org/ontology/Base_Ontology#Device">
        <rdfs:subClassOf rdf:resource="http://www.onem2m.org/ontology/Base_Ontology#Thing"/>
        <rdfs:subClassOf>
            <Restriction>
                <onProperty rdf:resource="http://www.onem2m.org/ontology/Base_Ontology#hasService"/>
                <onClass rdf:resource="http://www.onem2m.org/ontology/Base_Ontology#Service"/>
                <minQualifiedCardinality rdf:datatype="&xsd;nonNegativeInteger">1</minQualifiedCardinality>
            </Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <Restriction>
                <onProperty rdf:resource="http://www.onem2m.org/ontology/Base_Ontology#hasFunctionality"/>
                <onClass rdf:resource="http://www.onem2m.org/ontology/Base_Ontology#Functionality"/>
                <minQualifiedCardinality rdf:datatype="&xsd;nonNegativeInteger">1</minQualifiedCardinality>
            </Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <Restriction>
                <onProperty rdf:resource="http://www.onem2m.org/ontology/Base_Ontology#consistsOf"/>
                <allValuesFrom rdf:resource="http://www.onem2m.org/ontology/Base_Ontology#Device"/>
            </Restriction>
        </rdfs:subClassOf>
        <rdfs:comment>A Device (Class: Device) is a object designed to accomplish a particular task. A Device contains some logic and is producer and/or consumer of data that are exchanged via its Services with other oneM2M entities (Devices, Things) in the network. A Device may be a physical or non-physical entity.
In the context of oneM2M a Device is always assumed to be capable of communicating electronically via a network.
 - In order to accomplish its task, the device performs one or more functionalities 
 - These functionalities are exposed in the network as Services of the Device.
 - A Device can be composed of several (sub-) Devices 
 - Each Device (including sub-Devices) needs to be individually addressable in the network.</rdfs:comment>
    </Class>
    


    <!-- http://www.onem2m.org/ontology/Base_Ontology#Functionality -->

    <Class rdf:about="http://www.onem2m.org/ontology/Base_Ontology#Functionality">
        <priorVersion>A Functionality (Class: Functionality) represents the functionality necessary to accomplish the task for which a Device is designed. A device can be designed to perform more than one functionality.
The functionality exhibits the – human understandable – meaning what the device “does”. 
A Functionality refers to (e.g. observes or influences) some real-world aspect(s), that can be modelled as a Class: Aspect.
E.g. considering a “light switch” then a related Functionality could be “Controlling_ON_OFF” or “Controlling Brightness”. These functionalities would refer to an Aspect “light-control”.

A Functionality of a Device can be influenced / observed by a human user through the Commands that this Functionality has and that are offered to the user</priorVersion>
    </Class>
    


    <!-- http://www.onem2m.org/ontology/Base_Ontology#Input -->

    <Class rdf:about="http://www.onem2m.org/ontology/Base_Ontology#Input">
        <rdfs:subClassOf>
            <Restriction>
                <onProperty rdf:resource="http://www.onem2m.org/ontology/Base_Ontology#hasDataTypeAndRange"/>
                <cardinality rdf:datatype="&xsd;nonNegativeInteger">1</cardinality>
            </Restriction>
        </rdfs:subClassOf>
        <rdfs:comment>Input (Class: Input) describes the type of input of an Operation of a Service of the Device. Input also describes the type of input of an Command of a Functionality of the Device. 
NOTE: The Input of a Command may differ from the Input to its exposed Operation. 
E.g. while the Input to a “setLightIntensity” Command may take values 0 – 100 % the corresponding Input values for the related Operation may be restricted to integers 0 – 63.
An application (e.g. AE) that implements a human-machine interface for invoking the Operation needs to take care of such differences.
 - The Input class shall represent all possible values for that input (data types and -ranges). 
 - An Operation/Command may have multiple Inputs and/or Outputs. If an instance of an Operation is invoked then the input value to that Operation shall be an instance of its Input class 
(e.g, instances “ON” or “OFF” for an Input class consisting of the enumeration {“ON”,“OFF”} that sets the state of a switch or a real number within a certain range for a “Temperature” Input class for a thermostat.) 
 - The Input has a Target (via Object Property: “hasInputTarget”) that describes a destination (e.g. a URL) where the Input values are to be stored.
 - The Input describes an Aspect (e.g. a desired state like “ON” or “OFF” or a temperature to be set).</rdfs:comment>
    </Class>
    


    <!-- http://www.onem2m.org/ontology/Base_Ontology#InterworkedMethod -->

    <Class rdf:about="http://www.onem2m.org/ontology/Base_Ontology#InterworkedMethod">
        <rdfs:subClassOf rdf:resource="http://www.onem2m.org/ontology/Base_Ontology#Method"/>
        <rdfs:comment>InterworkedMethod (Class: InterworkedMethod) is the method of the offered by a InterworkedDevice in an interworked, non-oneM2M technology</rdfs:comment>
    </Class>
    


    <!-- http://www.onem2m.org/ontology/Base_Ontology#MeasuringFunctionality -->

    <Class rdf:about="http://www.onem2m.org/ontology/Base_Ontology#MeasuringFunctionality">
        <rdfs:subClassOf rdf:resource="http://www.onem2m.org/ontology/Base_Ontology#Functionality"/>
        <rdfs:comment>A MeasuringFunctionality (Class: MeasuringFunctionality) represents a functionality that has no impacts on the real world, but only gathers data. In general a MeasuringFunctionality has Commands (and/or Operations of its related Services)  that generate Output data
E.g. a temperature sensor would have “temperature-sensing” as a MeasuringFunctionality</rdfs:comment>
    </Class>
    


    <!-- http://www.onem2m.org/ontology/Base_Ontology#MetaData -->

    <Class rdf:about="http://www.onem2m.org/ontology/Base_Ontology#MetaData">
        <rdfs:comment>MetaData (Class: MetaData) contain data (like units, precision-ranges …) about the Values of a Thing or about an Aspect. 
E.g. the indoor temperature could have meta data: “Degrees Celsius”. 


... Editor&apos;s Note: NEED TO BE RENAMED</rdfs:comment>
    </Class>
    


    <!-- http://www.onem2m.org/ontology/Base_Ontology#Method -->

    <Class rdf:about="http://www.onem2m.org/ontology/Base_Ontology#Method">
        <rdfs:comment>A Method (Class: Method) describes the way (e.g. RESTful or RPC based, subscribed, event based, polled, pushed..) how data input/output is offered by an Operation of the Device and/or InterworkedDevice.
Since the method how an operation is offered by a oneM2M Device (or a proxied device in the oneM2M Sytem) will differ from the method how an operation is offered by a InterworkedDevice in an interworked technology two sub-classes of class “Method” are defined in the base ontology: 
“CRUDNMethod” and “InterworkedMethod” to emphasize that while the method in oneM2M will always be one of CREATE, RETRIEVE, UPDATE, DELETE, NOTIFY the method of the data in the interworked, non-oneM2M technology may e.g. be a certain, operation specific value at a defined position in a byte string that is sent via a technology specific protocol to the interworked, non-oneM2M device</rdfs:comment>
    </Class>
    


    <!-- http://www.onem2m.org/ontology/Base_Ontology#Operation -->

    <Class rdf:about="http://www.onem2m.org/ontology/Base_Ontology#Operation">
        <rdfs:subClassOf>
            <Restriction>
                <onProperty rdf:resource="http://www.onem2m.org/ontology/Base_Ontology#hasInput"/>
                <allValuesFrom rdf:resource="http://www.onem2m.org/ontology/Base_Ontology#Input"/>
            </Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <Restriction>
                <onProperty rdf:resource="http://www.onem2m.org/ontology/Base_Ontology#hasOutput"/>
                <allValuesFrom rdf:resource="http://www.onem2m.org/ontology/Base_Ontology#Output"/>
            </Restriction>
        </rdfs:subClassOf>
        <rdfs:subClassOf>
            <Restriction>
                <onProperty rdf:resource="http://www.onem2m.org/ontology/Base_Ontology#hasOperationState"/>
                <allValuesFrom rdf:resource="http://www.onem2m.org/ontology/Base_Ontology#OperationState"/>
            </Restriction>
        </rdfs:subClassOf>
        <rdfs:comment>OperationState (Class: OperationState) describes the current state of an Operation. The OperationState class represents all possible values for that state (enumerated individuals). The OperationState is set during the progress of the operation by the CSE and, optionally, the entity that is the target of the operation, e.g. a device (or for interworked devices by the IPE). 
 - The OperationState has a Target (via Object Property: “has OperationStateTarget”) that describes a destination (e.g. a URL) where the OperationState values are stored


Editors Note: Standardized operation states are FFS: States could e.g describe &quot;Operation_Initiated&quot; (initiating entity has  UPDATEd &lt;operation&gt; input data),  &quot;Operation_Input_transmitted&quot; (CSE has transmitted  input data to AE),  &quot;Operation_Executing&quot;(IPE has transmitted  input data to InterworkedDevice), &quot;Operation_Output_created&quot; (CSE has received output data from AE), &quot;Operation_Ended&quot; (provided by CSE if no output is expected or upon a time-out of the operation or provided by AE, e.g. after sending last output)</rdfs:comment>
    </Class>
    


    <!-- http://www.onem2m.org/ontology/Base_Ontology#OperationState -->

    <Class rdf:about="http://www.onem2m.org/ontology/Base_Ontology#OperationState">
        <rdfs:subClassOf>
            <Restriction>
                <onProperty rdf:resource="http://www.onem2m.org/ontology/Base_Ontology#hasDataTypeAndRange"/>
                <cardinality rdf:datatype="&xsd;nonNegativeInteger">1</cardinality>
            </Restriction>
        </rdfs:subClassOf>
    </Class>
    


    <!-- http://www.onem2m.org/ontology/Base_Ontology#Output -->

    <Class rdf:about="http://www.onem2m.org/ontology/Base_Ontology#Output">
        <rdfs:subClassOf>
            <Restriction>
                <onProperty rdf:resource="http://www.onem2m.org/ontology/Base_Ontology#hasDataTypeAndRange"/>
                <cardinality rdf:datatype="&xsd;nonNegativeInteger">1</cardinality>
            </Restriction>
        </rdfs:subClassOf>
        <rdfs:comment>Output (Class: Output) describes the type of output of an Operation of a Service of the Device. Output also describes the type of output of an Command of a Functionality of the Device. 
NOTE: The Output of a Command may differ from the Output to its exposed Operation. 
E.g. while the Output of a “currentLightIntensity” Command may take values 0 – 100 % the corresponding Output values for the related Operation may be restricted to integers 0 – 63.
An application (e.g. AE) that implements a human-machine interface for presenting the Output of the Operation to the human user needs to take care of such differences.
 - The Output class shall represent all possible values for that output (data types and -ranges). 
 - An Operation/Command may have multiple Outputs and/or Outputs. The the output value of an instance of an Operation shall be an instance of the Operation’s Output class 
(e.g, instances “ON” or “OFF” for an Output class consisting of the enumeration {“ON”,“OFF”} that shows the state of a switch or a real number within a certain range for a “Temperature” Output class for a temperature sensor.) 
 - The Output has a Target (via Object Property: “hasOutputTarget”) that describes a destination (e.g. a URL) where the Output values are to be stored.
 - The Output describes an Aspect (e.g. the state of a light switch like “ON” or “OFF” or a measured temperature).</rdfs:comment>
    </Class>
    


    <!-- http://www.onem2m.org/ontology/Base_Ontology#Service -->

    <Class rdf:about="http://www.onem2m.org/ontology/Base_Ontology#Service">
        <rdfs:subClassOf>
            <Restriction>
                <onProperty rdf:resource="http://www.onem2m.org/ontology/Base_Ontology#hasOperation"/>
                <onClass rdf:resource="http://www.onem2m.org/ontology/Base_Ontology#Operation"/>
                <minQualifiedCardinality rdf:datatype="&xsd;nonNegativeInteger">1</minQualifiedCardinality>
            </Restriction>
        </rdfs:subClassOf>
        <rdfs:comment>A Service (Class: Service) is a representation of a Functionality in a network. The Service exposes the Functionality to the network and makes it discoverable, registerable and remotely controllable in the network. 
A Service is offered by a device that wants (a certain set of) its Functionalities to be discoverable, registerable, remotely controllable by other devices in the network. 
A Service can expose one or more Functionalities and a Functionality can be exposed by one or more Services.
NOTE: While a Functionality  describes the – human understandable – meaning of a functionality of the device the Service is used to describe how such functionality is represented in a communication network and can be accessed by electronic means. The Service and its Operations is therefore dependent on the technology of the network, hard- and software of the device.
E.g. the Functionality: “turn_light_On_or_Off” could be exposed in the network by a Service “UPDATE Binary Value”.
 - Object Property “hasSubService” is expresses the fact that Services can be composed of independent (sub)Services.
E.g. a Service could thus be composed out of multiple (reusable) service modules. A Dimmer could contain a module “binaryActuator” to turn on/off and additionally “setInteger0-255Actuator” to set the dimming level</rdfs:comment>
    </Class>
    


    <!-- http://www.onem2m.org/ontology/Base_Ontology#Target -->

    <Class rdf:about="http://www.onem2m.org/ontology/Base_Ontology#Target">
        <rdfs:comment>Target (Class: Target) describes  a destination (e.g. a URL) to which the Operation and input data of the Operation should be sent and from where Output- or State data can be obtained. 
The Target class is dependent on the technology (e.g. oneM2M RESTful style or RPC style Area Network technologies) on which the Operation is applied. 
Since the target of data in the oneM2M Sytem will differ from the target in an interworked technology two sub-classes of class “Target” are defined in the base ontology: 
“OneM2MTarget” and “InterworkedTarget” to emphasize that while the target of data in oneM2M will always be some oneM2M resource (e.g. a contentInstance in a container) the target of the data in the interworked, non-oneM2M technology may e.g. be a certain position in a byte string that is sent via a technology specific protocol to the interworked, non-oneM2M device
 - OneM2MTarget (Class: OneM2MTarget) is the target of data in the oneM2M System
 - InterworkedTarget (Class: InterworkedTarget) is the target of data in the interworked, non-oneM2M technology</rdfs:comment>
    </Class>
    


    <!-- http://www.onem2m.org/ontology/Base_Ontology#Thing -->

    <Class rdf:about="http://www.onem2m.org/ontology/Base_Ontology#Thing">
        <rdfs:subClassOf rdf:resource="http://lab.wot-rdf.org/CrossDomain#ContextEntity"/>
        <rdfs:subClassOf>
            <Restriction>
                <onProperty rdf:resource="http://www.onem2m.org/ontology/Base_Ontology#hasThingRelation"/>
                <allValuesFrom rdf:resource="http://www.onem2m.org/ontology/Base_Ontology#Thing"/>
            </Restriction>
        </rdfs:subClassOf>
        <rdfs:comment>A Thing in oneM2M  (Class: Thing) is an entity that can be identified in the oneM2M System. A Thing may have properties (Object Property: hasThingProperty) that can be described by Values. A Thing can have relations to other things (Object Property: hasThingRelation)
E.g. A room that is modelled in oneM2M would be a Thing that could have a room-temperature as a Value and could have a relationship “isAdjacentTo” to another room</rdfs:comment>
    </Class>
    


    <!-- http://www.onem2m.org/ontology/Base_Ontology#Value -->

    <Class rdf:about="http://www.onem2m.org/ontology/Base_Ontology#Value">
        <rdfs:subClassOf>
            <Restriction>
                <onProperty rdf:resource="http://www.onem2m.org/ontology/Base_Ontology#hasDataTypeAndRange"/>
                <cardinality rdf:datatype="&xsd;nonNegativeInteger">1</cardinality>
            </Restriction>
        </rdfs:subClassOf>
        <rdfs:comment>A Value (Class: Value) denotes a property of a Thing. A Value can e.g. be observed or influenced by devices, or it constitutes static data about a Thing.
E.g. the indoor temperature of the room could be a Value of a Thing “room”.
A Value of a thing can concern a certain Aspect, e.g. the indoor temperature concerns the Aspect “Temperature” that could be measured by a temperature sensor.
A Value of a Thing can have meta data</rdfs:comment>
    </Class>
    


    <!-- https://www.w3.org/2003/01/geo/wgs84_pos#Point -->

    <Class rdf:about="https://www.w3.org/2003/01/geo/wgs84_pos#Point">
        <rdfs:subClassOf rdf:resource="http://www.onem2m.org/ontology/Base_Ontology#Aspect"/>
        <rdfs:comment>[CD]</rdfs:comment>
    </Class>
    


    <!-- https://www.w3.org/2006/Time -->

    <Class rdf:about="https://www.w3.org/2006/Time">
        <rdfs:subClassOf rdf:resource="http://www.onem2m.org/ontology/Base_Ontology#Aspect"/>
        <rdfs:comment>[CD]</rdfs:comment>
    </Class>
</rdf:RDF>



<!-- Generated by the OWL API (version 3.5.0) http://owlapi.sourceforge.net -->

